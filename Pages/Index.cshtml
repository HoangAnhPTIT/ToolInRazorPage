@page
@model IndexModel
@{
    ViewData["Title"] = "Trang chủ";
}
<h1>Tải lên file mới</h1>

<p>Chọn file excel bạn muốn tải lên</p>

<form id="uploadForm" action="Streaming/UploadPhysical" method="post"
      enctype="multipart/form-data" onsubmit="AJAXSubmit(this);return false;">
    <dl>
        <dt>
            <label for="file">File</label>
        </dt>
        <dd>
            <input id="file" type="file" name="file" />
        </dd>
    </dl>

    <input class="btn btn-primary" type="submit" value="Tải lên" />

    <div style="margin-top:15px">
        <output form="uploadForm" name="result"></output>
    </div>
</form>

<h1>Danh sách file hiện có</h1>

@if (Model.PhysicalFiles.Count() == 0)
{
    <p>
        No files are available. Visit one of the file upload scenario pages to upload one or more files.
    </p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    Tên
                </th>
                <th>
                    Kích thước (bytes)
                </th>
                <th>
                    <code>Tải xuống</code>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in Model.PhysicalFiles)
            {
                <tr>
                    <td>
                        <a asp-page="./DeletePhysicalFile" asp-route-fileName="@file.Name">Xóa</a>
                    </td>
                    <td>
                        <b>@file.Name</b><br>
                    </td>
                    <td>
                        @file.Length.ToString("N0")
                    </td>
                    <td>
                        <a asp-page-handler="DownloadPhysical" asp-route-fileName="@file.Name">Download</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script>
        "use strict";

        async function AJAXSubmit(oFormElement) {
            const formData = new FormData(oFormElement);

            try {
                const response = await fetch(oFormElement.action, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': getCookie('RequestVerificationToken')
                    },
                    body: formData
                });

                oFormElement.elements.namedItem("result").value =
                    'Result: ' + response.status + ' ' + response.statusText;
                if (response.status == '201') location.reload();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }
    </script>
}

